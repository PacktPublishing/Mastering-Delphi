unit TestUnit1;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Unit1;

type
  // Test methods for class TSquare

  TestTSquare = class(TTestCase)
  strict private
    FSquare: TSquare;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSquare;
    procedure TestNegativeA;
  end;

implementation

procedure TestTSquare.SetUp;
begin
  FSquare := TSquare.Create;
end;

procedure TestTSquare.TearDown;
begin
  FSquare.Free;
end;

procedure TestTSquare.TestNegativeA;
var
  ReturnValue: Integer;
  a: Integer;
  ExpectedVal: Integer;
begin
  // TODO: Setup method call parameters
  a := -5;
  ExpectedVal := 20;
  ReturnValue := FSquare.Square(a);
  // TODO: Validate method results
  CheckEquals(ExpectedVal, ReturnValue);
//  Fail('It must be implemented');
end;

procedure TestTSquare.TestSquare;
var
  ReturnValue: Integer;
  a: Integer;
  ExpectedVal: Integer;
begin
  // TODO: Setup method call parameters
  a := 5;
  ExpectedVal := 20;
  ReturnValue := FSquare.Square(a);
  // TODO: Validate method results
  CheckEquals(ExpectedVal, ReturnValue);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTSquare.Suite);
end.

